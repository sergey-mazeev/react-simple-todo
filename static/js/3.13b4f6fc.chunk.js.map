{"version":3,"sources":["Modal/Modal.jsx","Todo/AddTodo.jsx"],"names":["Modal","props","title","children","open","close","className","type","onClick","e","preventDefault","AddTodo","createTodo","defaultvalue","useState","value","setValue","bind","onChange","target","clear","useInputValue","defaultValue","isOpen","setOpen","toggle","useModal","inputCheckbox","defaultStatus","checked","setChecked","useInputCheckbox","handleSubmit","trim","length","onSubmit","name","placeholder","id","htmlFor"],"mappings":"sLA+CeA,G,MAhCD,SAACC,GAAW,IACjBC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,MAO9B,OACE,oCACGD,GACD,yBAAKE,UAAU,SACb,yBAAKA,UAAU,kBACb,4BAAQA,UAAU,iBAChB,wBAAIA,UAAU,gBAAgBJ,GAC9B,4BAAQI,UAAU,eAAeC,KAAK,SAASC,QAZrC,SAACC,GACnBA,EAAEC,iBACFL,MAUQ,SAEF,yBAAKC,UAAU,eACZH,QCqCEQ,UA7CC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EArBZ,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACjBC,mBAASD,GADQ,mBACpCE,EADoC,KAC7BC,EAD6B,KAE3C,MAAO,CACLC,KAAM,CACJF,QACAG,SAAU,SAAAT,GAAC,OAAIO,EAASP,EAAEU,OAAOJ,SAEnCK,MAAO,kBAAMJ,EAAS,KACtBD,MAAO,kBAAMA,IAccM,GAAtBJ,EADyB,EACzBA,KAAMG,EADmB,EACnBA,MAAOL,EADY,EACZA,MADY,EDrBV,WAA2B,IAA1BO,EAAyB,0DACtBR,mBAASQ,GADa,mBACzCC,EADyC,KACjCC,EADiC,KAGhD,MAAO,CACLD,SACAE,OAAQ,kBAAMD,GAASD,IACvBlB,MAAO,kBAAMmB,GAAQ,IACrBpB,KAAM,kBAAMoB,GAAQ,KCgBQE,GAAvBtB,EAFyB,EAEzBA,KAAMC,EAFmB,EAEnBA,MAAOkB,EAFY,EAEZA,OACdI,EAZiB,WAA4B,IAA3BC,EAA0B,0DACpBd,mBAASc,GADW,mBAC3CC,EAD2C,KAClCC,EADkC,KAGlD,MAAO,CACLD,UACAX,SAAU,kBAAMY,GAAYD,KAORE,GAEhBC,EAAe,SAACvB,GACpBA,EAAEC,iBAEEK,IAAQkB,OAAOC,SACjBtB,EAAWG,IAASY,EAAcE,SAClCT,IACAf,MASJ,OACE,0BAAMC,UAAU,qBAAqB6B,SAAUH,GAC7C,yCACEzB,KAAK,OACL6B,KAAK,WACLC,YAAY,sBACRpB,IACN,4BAAQV,KAAK,SAASD,UAAU,gBAAhC,YACA,4BAAQC,KAAK,SAASD,UAAU,iBAAiBE,QAbnC,SAACC,GACjBA,EAAEC,iBACFN,MAWE,mBAEA,kBAAC,EAAD,CAAOF,MAAM,WAAWE,KAAMmB,EAAQlB,MAAOA,GAC3C,yBAAKC,UAAU,uBACb,yCAAOgC,GAAG,kBAAkB/B,KAAK,YAAeoB,IAChD,2BAAOY,QAAQ,mBAAf,kBACA,4BAAQhC,KAAK,SAASD,UAAU,eAAeE,QAASwB,GAAxD","file":"static/js/3.13b4f6fc.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './Modal.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const useModal = (defaultValue = false) => {\r\n  const [isOpen, setOpen] = useState(defaultValue);\r\n\r\n  return {\r\n    isOpen,\r\n    toggle: () => setOpen(!isOpen),\r\n    close: () => setOpen(false),\r\n    open: () => setOpen(true),\r\n  }\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const {title, children, open, close} = props;\r\n\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open &&\r\n      <div className='modal'>\r\n        <div className=\"modal__wrapper\">\r\n          <header className=\"modal__header\">\r\n            <h5 className=\"modal__title\">{title}</h5>\r\n            <button className=\"modal__close\" type='button' onClick={handleClose}>&times;</button>\r\n          </header>\r\n          <div className=\"modal__body\">\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>}\r\n    </>\r\n  )\r\n};\r\n\r\nModal.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  open: PropTypes.bool,\r\n  close: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal, {useModal} from \"../Modal/Modal\";\r\n\r\nconst useInputValue = (defaultvalue = '') => {\r\n  const [value, setValue] = useState(defaultvalue);\r\n  return {\r\n    bind: {\r\n      value,\r\n      onChange: e => setValue(e.target.value),\r\n    },\r\n    clear: () => setValue(''),\r\n    value: () => value,\r\n  }\r\n};\r\n\r\nconst useInputCheckbox = (defaultStatus = false) => {\r\n  const [checked, setChecked] = useState(defaultStatus);\r\n\r\n  return {\r\n    checked,\r\n    onChange: () => setChecked(!checked),\r\n  }\r\n};\r\n\r\nconst AddTodo = ({createTodo}) => {\r\n  const {bind, clear, value} = useInputValue();\r\n  const {open, close, isOpen} = useModal();\r\n  const inputCheckbox = useInputCheckbox();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value().trim().length) {\r\n      createTodo(value(), inputCheckbox.checked);\r\n      clear();\r\n      close();\r\n    }\r\n  };\r\n\r\n  const openModal = (e) => {\r\n    e.preventDefault();\r\n    open();\r\n  };\r\n\r\n  return (\r\n    <form className=\"form form_add-todo\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"todoname\"\r\n        placeholder=\"New todo item name\"\r\n        {...bind}/>\r\n      <button type=\"submit\" className=\"btn btn_main\">Add todo</button>\r\n      <button type=\"button\" className=\"btn btn_accent\" onClick={openModal}>Add custom todo</button>\r\n\r\n      <Modal title='Add todo' open={isOpen} close={close}>\r\n        <div className=\"task-completed-flag\">\r\n          <input id=\"isTaskCompleted\" type=\"checkbox\" {...inputCheckbox}/>\r\n          <label htmlFor=\"isTaskCompleted\">Task completed</label>\r\n          <button type=\"submit\" className=\"btn btn_main\" onClick={handleSubmit}>Add task</button>\r\n        </div>\r\n      </Modal>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddTodo.propTypes = {\r\n  createTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;"],"sourceRoot":""}